basePath: /v1
definitions:
  api.CreateTimelineRequest:
    properties:
      frames:
        description: The frame sequence to progress through
        items:
          $ref: '#/definitions/data.TimelineFrame'
        type: array
      name:
        description: The timeline name
        type: string
    type: object
  api.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  api.SystemResponse:
    properties:
      data:
        type: object
      message:
        type: string
    type: object
  api.UpdateTimelineRequest:
    properties:
      enabled:
        description: Timeline enabled or not
        type: boolean
      frames:
        description: The frame sequence to progress through
        items:
          $ref: '#/definitions/data.TimelineFrame'
        type: array
      id:
        description: Unique Timeline ID
        type: string
      name:
        description: The timeline name
        type: string
    type: object
  data.ChannelValue:
    properties:
      channel:
        description: Unique Fixture ID
        type: integer
      value:
        description: Optional fixture name
        type: integer
    type: object
  data.TimelineFrame:
    properties:
      channels:
        description: Channel information to set for the scene (optional) Required
          if type = scene or fade
        items:
          $ref: '#/definitions/data.ChannelValue'
        type: array
      sleeptime:
        description: Sleep type in seconds (optional) Required if type = sleep
        type: integer
      type:
        description: Timeline frame type (scene/sleep/fade) Fade 'fades' between the
          previous channel state and this frame
        type: string
    type: object
info:
  contact: {}
  description: fxDmx REST service for DMX fixture control from Raspberry Pi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: fxDmx
  version: "1.0"
paths:
  /event/{id}:
    get:
      consumes:
      - application/json
      description: Gets a log event.
      parameters:
      - description: The event id to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets a log event.
      tags:
      - events
  /events:
    get:
      consumes:
      - application/json
      description: Gets all events in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets all events in the system
      tags:
      - events
  /system/usbinfo:
    get:
      consumes:
      - application/json
      description: Gets information about currently connected USB serial devices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets information about currently connected USB serial devices
      tags:
      - system
  /timelines:
    get:
      consumes:
      - application/json
      description: List all timelines in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List all timelines in the system
      tags:
      - timelines
    post:
      consumes:
      - application/json
      description: Create a new timeline
      parameters:
      - description: The timeline to create
        in: body
        name: timeline
        required: true
        schema:
          $ref: '#/definitions/api.CreateTimelineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new timeline
      tags:
      - timelines
    put:
      consumes:
      - application/json
      description: Update a timeline
      parameters:
      - description: The timeline to update.  Must include timeline.id
        in: body
        name: timeline
        required: true
        schema:
          $ref: '#/definitions/api.UpdateTimelineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update a timeline
      tags:
      - timelines
  /timelines/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a timeline in the system
      parameters:
      - description: The timeline id to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Deletes a timeline in the system
      tags:
      - timelines
  /timelines/play/{id}:
    post:
      consumes:
      - application/json
      description: Plays a timeline in the system
      parameters:
      - description: The timeline id to play
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Plays a timeline in the system
      tags:
      - timelines
  /timelines/stop:
    post:
      consumes:
      - application/json
      description: Stops all timeline 'play' processes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
      summary: Stops all timeline 'play' processes
      tags:
      - timelines
  /timelines/stop/{pid}:
    post:
      consumes:
      - application/json
      description: Stops a specific timeline 'play' process
      parameters:
      - description: The process id to stop
        in: path
        name: pid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Stops a specific timeline 'play' process
      tags:
      - timelines
swagger: "2.0"
